{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AppComponent = class AppComponent {\n  constructor(contactsService) {\n    this.contactsService = contactsService;\n    this.title = 'angular';\n    this.contacts = [];\n    this.contact = {\n      id: '',\n      firstName: '',\n      lastName: '',\n      email: '',\n      contact: '',\n      address: '',\n      city: '',\n      state: '',\n      pincode: ''\n    };\n  }\n  ngOnInit() {\n    this.getAllContacts();\n  }\n  getAllContacts() {\n    this.contactsService.getAllContacts().subscribe(response => {\n      this.contacts = response;\n      this.contact = {\n        id: '',\n        firstName: '',\n        lastName: '',\n        email: '',\n        contact: '',\n        address: '',\n        city: '',\n        state: '',\n        pincode: ''\n      };\n    });\n  }\n  onSubmit() {\n    if (this.contact.id === '') {\n      this.contactsService.addContact(this.contact).subscribe(response => {\n        this.getAllContacts();\n        this.contact = {\n          id: '',\n          firstName: '',\n          lastName: '',\n          email: '',\n          contact: '',\n          address: '',\n          city: '',\n          state: '',\n          pincode: ''\n        };\n      });\n    } else {\n      this.updateContact(this.contact);\n    }\n  }\n  deleteContact(id) {\n    this.contactsService.deleteContact(id).subscribe(response => {\n      this.getAllContacts();\n    });\n  }\n  populateForm(contact) {\n    this.contact = contact;\n  }\n  updateContact(contact) {\n    this.contactsService.updateContact(contact).subscribe(response => {\n      this.getAllContacts();\n    });\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);\nexport { AppComponent };\n``;","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAS1C,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EAiBvBC,YAAoBC,eAAgC;IAAhC,oBAAe,GAAfA,eAAe;IAhBnC,UAAK,GAAG,SAAS;IACjB,aAAQ,GAAY,EAAE;IAEpB,YAAO,GAAU;MACfC,EAAE,EAAC,EAAE;MACLC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,OAAO,EAAE,EAAE;MACXC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAC;KACT;EAKH;EACAC,QAAQ;IACN,IAAI,CAACC,cAAc,EAAE;EAGvB;EAEAA,cAAc;IACZ,IAAI,CAACX,eAAe,CAACW,cAAc,EAAE,CACpCC,SAAS,CACRC,QAAQ,IAAE;MACR,IAAI,CAACC,QAAQ,GAACD,QAAQ;MACtB,IAAI,CAACR,OAAO,GAAE;QACZJ,EAAE,EAAC,EAAE;QACLC,SAAS,EAAE,EAAE;QACbC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,EAAE;QACTC,OAAO,EAAE,EAAE;QACXC,OAAO,EAAE,EAAE;QACXC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE,EAAE;QACTC,OAAO,EAAC;OACT;IACH,CAAC,CACF;EACH;EACAM,QAAQ;IAEN,IAAI,IAAI,CAACV,OAAO,CAACJ,EAAE,KAAG,EAAE,EAAC;MAEvB,IAAI,CAACD,eAAe,CAACgB,UAAU,CAAC,IAAI,CAACX,OAAO,CAAC,CAC9CO,SAAS,CACRC,QAAQ,IAAG;QACT,IAAI,CAACF,cAAc,EAAE;QACrB,IAAI,CAACN,OAAO,GAAC;UACXJ,EAAE,EAAC,EAAE;UACLC,SAAS,EAAE,EAAE;UACbC,QAAQ,EAAE,EAAE;UACZC,KAAK,EAAE,EAAE;UACTC,OAAO,EAAE,EAAE;UACXC,OAAO,EAAE,EAAE;UACXC,IAAI,EAAE,EAAE;UACRC,KAAK,EAAE,EAAE;UACTC,OAAO,EAAC;SACT;MACH,CAAC,CACF;KACA,MAAM;MACL,IAAI,CAACQ,aAAa,CAAC,IAAI,CAACZ,OAAO,CAAC;;EAKpC;EACAa,aAAa,CAACjB,EAAS;IACrB,IAAI,CAACD,eAAe,CAACkB,aAAa,CAACjB,EAAE,CAAC,CACrCW,SAAS,CACRC,QAAQ,IAAE;MACR,IAAI,CAACF,cAAc,EAAE;IACvB,CAAC,CACF;EACH;EAEAQ,YAAY,CAACd,OAAgB;IAC/B,IAAI,CAACA,OAAO,GAACA,OAAO;EAClB;EAEAY,aAAa,CAACZ,OAAgB;IAC5B,IAAI,CAACL,eAAe,CAACiB,aAAa,CAACZ,OAAO,CAAC,CAC1CO,SAAS,CACRC,QAAQ,IAAE;MACR,IAAI,CAACF,cAAc,EAAE;IACvB,CAAC,CACF;EACH;CACD;AA9FYb,YAAY,eALxBD,SAAS,CAAC;EACTuB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,GACWxB,YAAY,CA8FxB;SA9FYA,YAAY;AA8FxB,EAAE","names":["Component","AppComponent","constructor","contactsService","id","firstName","lastName","email","contact","address","city","state","pincode","ngOnInit","getAllContacts","subscribe","response","contacts","onSubmit","addContact","updateContact","deleteContact","populateForm","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\MANO\\Desktop\\.Net Core With Angular\\angular\\src\\app\\app.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { contacts } from './models/contacts.model';\nimport { contactsService } from './service/contacts.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'angular';\n  contacts:contacts[]=[];\n  \n    contact:contacts={\n      id:'',\n      firstName: '',\n      lastName: '',\n      email: '',\n      contact: '',\n      address: '',\n      city: '',\n      state: '',\n      pincode:'',\n    }\n\n\n  constructor(private contactsService: contactsService) {\n\n  }\n  ngOnInit(): void {\n    this.getAllContacts();\n    \n    \n  }\n\n  getAllContacts(){\n    this.contactsService.getAllContacts()\n    .subscribe(\n      response=>{\n        this.contacts=response;\n        this.contact ={\n          id:'',\n          firstName: '',\n          lastName: '',\n          email: '',\n          contact: '',\n          address: '',\n          city: '',\n          state: '',\n          pincode:'',\n        }\n      }\n    )\n  }\n  onSubmit (){\n\n    if (this.contact.id===''){\n\n      this.contactsService.addContact(this.contact)\n    .subscribe(\n      response => {\n        this.getAllContacts();\n        this.contact={\n          id:'',\n          firstName: '',\n          lastName: '',\n          email: '',\n          contact: '',\n          address: '',\n          city: '',\n          state: '',\n          pincode:'',\n        }\n      }\n    );\n    } else {\n      this.updateContact(this.contact);\n    }\n\n\n    \n  }\n  deleteContact(id:string){\n    this.contactsService.deleteContact(id)\n    .subscribe(\n      response=>{\n        this.getAllContacts();\n      }\n    );\n  }\n\n  populateForm(contact:contacts){\nthis.contact=contact;\n  }\n\n  updateContact(contact:contacts){\n    this.contactsService.updateContact(contact)\n    .subscribe(\n      response=>{\n        this.getAllContacts();\n      }\n    );\n  }\n}``\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}